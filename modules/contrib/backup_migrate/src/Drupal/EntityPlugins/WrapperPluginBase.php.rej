--- src/EntityPlugins/WrapperPluginBase.php
+++ src/Drupal/EntityPlugins/WrapperPluginBase.php
@@ -1,9 +1,9 @@
 <?php
 
-namespace BackupMigrate\Drupal\EntityPlugins;
+namespace Drupal\backup_migrate\Drupal\EntityPlugins;
 
-use BackupMigrate\Core\Config\Config;
-use BackupMigrate\Core\Main\BackupMigrateInterface;
+use Drupal\backup_migrate\Core\Config\Config;
+use Drupal\backup_migrate\Core\Main\BackupMigrateInterface;
 use Drupal\Component\Plugin\PluginBase;
 
 /**
@@ -11,7 +11,7 @@
  *
  * A base class for a drupal source or destination wrapper plugin.
  *
- * @package BackupMigrate\Drupal\EntityPlugins
+ * @package Drupal\backup_migrate\Drupal\EntityPlugins
  */
 abstract class WrapperPluginBase extends PluginBase implements WrapperPluginInterface {
 
@@ -26,7 +26,7 @@ public function __construct(array $configuration, $plugin_id, $plugin_definition
   /**
    * Get the Backup and Migrate plugin object.
    *
-   * @return BackupMigrate\Core\Plugin\PluginInterface;
+   * @return Drupal\backup_migrate\Core\Plugin\PluginInterface;
    */
   public function getObject() {
     // If the class to wrap was specified in the annotation then add that class.
@@ -72,7 +72,7 @@ public function calculateDependencies() {
   /**
    * Return a Backup and Migrate Config object with the plugin configuration.
    *
-   * @return \BackupMigrate\Core\Config\Config
+   * @return \Drupal\backup_migrate\Core\Config\Config
    */
   public function getConfig() {
     return new Config($this->getConfiguration());
