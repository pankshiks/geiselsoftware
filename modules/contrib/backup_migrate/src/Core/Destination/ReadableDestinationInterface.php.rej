--- lib/backup_migrate_core/src/Destination/ReadableDestinationInterface.php
+++ src/Core/Destination/ReadableDestinationInterface.php
@@ -1,13 +1,13 @@
 <?php
 
-namespace BackupMigrate\Core\Destination;
+namespace Drupal\backup_migrate\Core\Destination;
 
-use BackupMigrate\Core\File\BackupFileInterface;
+use Drupal\backup_migrate\Core\File\BackupFileInterface;
 
 /**
  * Interface ReadableDestinationInterface.
  *
- * @package BackupMigrate\Core\Destination
+ * @package Drupal\backup_migrate\Core\Destination
  */
 interface ReadableDestinationInterface extends DestinationInterface {
 
@@ -16,11 +16,11 @@ interface ReadableDestinationInterface extends DestinationInterface {
    * This file item will not necessarily be readable nor will it have extended
    * metadata loaded. Use loadForReading and loadFileMetadata to get those.
    *
-   * @TODO: Decide if extended metadata should ALWAYS be loaded here.
+   * @todo Decide if extended metadata should ALWAYS be loaded here.
    *
    * @param string $id The unique identifier for the file. Usually the filename.
    *
-   * @return \BackupMigrate\Core\File\BackupFileInterface
+   * @return \Drupal\backup_migrate\Core\File\BackupFileInterface
    *    The file if it exists or NULL if it doesn't
    */
   public function getFile($id);
@@ -28,18 +28,18 @@ public function getFile($id);
   /**
    * Load the metadata for the given file however it may be stored.
    *
-   * @param \BackupMigrate\Core\File\BackupFileInterface $file
+   * @param \Drupal\backup_migrate\Core\File\BackupFileInterface $file
    *
-   * @return \BackupMigrate\Core\File\BackupFileInterface
+   * @return \Drupal\backup_migrate\Core\File\BackupFileInterface
    */
   public function loadFileMetadata(BackupFileInterface $file);
 
   /**
    * Load the file with the given ID from the destination.
    *
-   * @param \BackupMigrate\Core\File\BackupFileInterface $file
+   * @param \Drupal\backup_migrate\Core\File\BackupFileInterface $file
    *
-   * @return \BackupMigrate\Core\File\BackupFileReadableInterface The file if it exists or NULL if it doesn't
+   * @return \Drupal\backup_migrate\Core\File\BackupFileReadableInterface The file if it exists or NULL if it doesn't
    */
   public function loadFileForReading(BackupFileInterface $file);
 
