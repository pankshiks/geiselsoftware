--- lib/backup_migrate_core/src/Filter/FileNamer.php
+++ src/Core/Filter/FileNamer.php
@@ -1,19 +1,19 @@
 <?php
 
-namespace BackupMigrate\Core\Filter;
+namespace Drupal\backup_migrate\Core\Filter;
 
-use BackupMigrate\Core\Config\Config;
-use BackupMigrate\Core\Config\ValidationError;
-use BackupMigrate\Core\Plugin\FileProcessorInterface;
-use BackupMigrate\Core\Plugin\FileProcessorTrait;
-use BackupMigrate\Core\Plugin\PluginBase;
-use BackupMigrate\Core\File\BackupFileReadableInterface;
-use BackupMigrate\Core\Translation\TranslatableTrait;
+use Drupal\backup_migrate\Core\Config\Config;
+use Drupal\backup_migrate\Core\Config\ValidationError;
+use Drupal\backup_migrate\Core\Plugin\FileProcessorInterface;
+use Drupal\backup_migrate\Core\Plugin\FileProcessorTrait;
+use Drupal\backup_migrate\Core\Plugin\PluginBase;
+use Drupal\backup_migrate\Core\File\BackupFileReadableInterface;
+use Drupal\backup_migrate\Core\Translation\TranslatableTrait;
 
 /**
  * Class FileNamer.
  *
- * @package BackupMigrate\Core\Filter
+ * @package Drupal\backup_migrate\Core\Filter
  */
 class FileNamer extends PluginBase implements FileProcessorInterface {
   use FileProcessorTrait;
@@ -21,7 +21,7 @@ class FileNamer extends PluginBase implements FileProcessorInterface {
   /**
    * {@inheritdoc}
    */
-  public function configSchema($params = []) {
+  public function configSchema(array $params = []) {
     $schema = [];
     if (\Drupal::moduleHandler()->moduleExists('token')) {
       $must_match = '/^[\w\-_:\[\]]+$/';
@@ -68,7 +68,7 @@ public function configSchema($params = []) {
   /**
    * Get the default values for the plugin.
    *
-   * @return \BackupMigrate\Core\Config\Config
+   * @return \Drupal\backup_migrate\Core\Config\Config
    */
   public function configDefaults() {
     return new Config([
@@ -92,9 +92,9 @@ public function supportedOps() {
   /**
    * Run on a backup. Name the backup file according to the configuration.
    *
-   * @param \BackupMigrate\Core\File\BackupFileReadableInterface $file
+   * @param \Drupal\backup_migrate\Core\File\BackupFileReadableInterface $file
    *
-   * @return \BackupMigrate\Core\File\BackupFileReadableInterface
+   * @return \Drupal\backup_migrate\Core\File\BackupFileReadableInterface
    */
   public function afterBackup(BackupFileReadableInterface $file) {
     if (\Drupal::moduleHandler()->moduleExists('token')) {
